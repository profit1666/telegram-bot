import telebot
from telebot import types
import random
import sqlite3
from datetime import datetime

bot = telebot.TeleBot("7856074080:AAE9HoPWWVGGPlWiySZoKlMFVE5VPb5SvVU")
user_language = {}

# üóÉ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –ª–∏–¥–æ–≤
conn = sqlite3.connect('leads.db', check_same_thread=False)
cursor = conn.cursor()
cursor.execute('''
    CREATE TABLE IF NOT EXISTS leads (
        user_id INTEGER PRIMARY KEY,
        language TEXT,
        timestamp TEXT
    )
''')
conn.commit()

# üéØ –£–º–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–µ–ª –ø–æ —Ç—Ä—ë—Ö—É—Ä–æ–≤–Ω–µ–≤–æ–π —á–∞—Å—Ç–æ—Ç–µ
def generate_number():
    r = random.random()
    if r < 0.70:
        return round(random.uniform(0.52, 20.0), 2)
    elif r < 0.95:
        return round(random.uniform(20.1, 99.9), 2)
    else:
        return round(random.uniform(100.0, 999.9), 1)

# üîª –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
@bot.message_handler(commands=['start'])
def start(message):
    send_language_selection(message.chat.id)

def send_language_selection(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(types.KeyboardButton("üá¨üáß English"), types.KeyboardButton("üáÆüá≥ ‡§π‡§ø‡§Ç‡§¶‡•Ä"))
    bot.send_message(
        chat_id,
        "Please choose your language:\n‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§ö‡•Å‡§®‡•á‡§Ç:",
        reply_markup=markup
    )

# üîÅ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@bot.message_handler(func=lambda m: m.text in ["üá¨üáß English", "üáÆüá≥ ‡§π‡§ø‡§Ç‡§¶‡•Ä"])
def choose_language(message):
    lang = "en" if "English" in message.text else "hi"
    chat_id = message.chat.id
    user_language[chat_id] = lang

    now = datetime.utcnow().isoformat()
    cursor.execute("INSERT OR REPLACE INTO leads (user_id, language, timestamp) VALUES (?, ?, ?)",
                   (chat_id, lang, now))
    conn.commit()

    btn_signal = "üéØ Get Signal" if lang == "en" else "üéØ ‡§∏‡§ø‡§ó‡•ç‡§®‡§≤ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç"
    btn_change = "üîÑ Change Language" if lang == "en" else "üîÑ ‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡•á‡§Ç"
    intro_msg = "Click the button below to get your signal:" if lang == "en" else "‡§®‡•Ä‡§ö‡•á ‡§¶‡§ø‡§è ‡§ó‡§è ‡§¨‡§ü‡§® ‡§™‡§∞ ‡§ï‡•ç‡§≤‡§ø‡§ï ‡§ï‡§∞‡•á‡§Ç:"

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton(btn_signal))
    markup.add(types.KeyboardButton(btn_change))
    bot.send_message(chat_id, intro_msg, reply_markup=markup)

# üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞–ª–∞ –∏ —Å–º–µ–Ω–∞ —è–∑—ã–∫–∞
@bot.message_handler(func=lambda m: m.text in [
    "üéØ Get Signal", "üéØ ‡§∏‡§ø‡§ó‡•ç‡§®‡§≤ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§ï‡§∞‡•á‡§Ç", "üîÑ Change Language", "üîÑ ‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡•á‡§Ç"])
def handle_buttons(message):
    chat_id = message.chat.id
    text = message.text
    lang = user_language.get(chat_id, "en")

    if text in ["üîÑ Change Language", "üîÑ ‡§≠‡§æ‡§∑‡§æ ‡§¨‡§¶‡§≤‡•á‡§Ç"]:
        send_language_selection(chat_id)
        return

    number = generate_number()
    signal_text = f"Your signal: {number}" if lang == "en" else f"‡§Ü‡§™‡§ï‡§æ ‡§∏‡§ø‡§ó‡•ç‡§®‡§≤: {number}"
    bot.send_message(chat_id, signal_text)

print("üöÄ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
from webserver import keep_alive
keep_alive()

bot.polling(none_stop=True)
from webserver import keep_alive
keep_alive()
